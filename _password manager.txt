Code for password manager: 
Create the Password Manager Script
Step 1: Create the Script File
            nano password_manager.sh


Step2: Change the directory
                 cd password_manager.sh


Step3: Insert code inside file 
#!/bin/bash


# File: password_manager.sh
# Password Manager Script
# Requirements: SQLite3, OpenSSL, Bash


DB="passwords.db"
MASTER_PASSWORD=""


# Prompt for the master password
prompt_master_password() {
  read -sp "Enter your master password: " MASTER_PASSWORD
  echo
}


# Encrypt password using AES-256
encrypt_password() {
  echo -n "$1" | openssl enc -aes-256-cbc -salt -base64
}


# Decrypt password using AES-256
decrypt_password() {
  echo "$1" | openssl enc -aes-256-cbc -d -salt -base64
}


# Initialize SQLite Database (if not already initialized)
initialize_db() {
  sqlite3 $DB "CREATE TABLE IF NOT EXISTS credentials (id INTEGER PRIMARY KEY, service TEXT, username TEXT, password TEXT);"
}


# Add a new password entry to the database
add_password() {
  echo -n "Enter the service name (e.g., Google, Facebook): "
  read service
  echo -n "Enter your username/email: "
  read username
  echo -n "Enter your password: "
  read -s password
  echo
  
  encrypted_password=$(encrypt_password "$password")
  sqlite3 $DB "INSERT INTO credentials (service, username, password) VALUES ('$service', '$username', '$encrypted_password');"
  echo "Password added successfully!"
}


# View a password entry from the database
view_password() {
  echo -n "Enter the service name to retrieve the password: "
  read service
  encrypted_password=$(sqlite3 $DB "SELECT password FROM credentials WHERE service='$service';")
  
  if [ -z "$encrypted_password" ]; then
    echo "No password found for $service."
  else
    decrypted_password=$(decrypt_password "$encrypted_password")
    echo "Password for $service: $decrypted_password"
  fi
}


# Update an existing password
update_password() {
  echo -n "Enter the service name to update the password: "
  read service
  echo -n "Enter your new password: "
  read -s new_password
  echo
  
  encrypted_new_password=$(encrypt_password "$new_password")
  sqlite3 $DB "UPDATE credentials SET password='$encrypted_new_password' WHERE service='$service';"
  echo "Password for $service updated successfully!"
}


# Delete a password entry
delete_password() {
  echo -n "Enter the service name to delete the password: "
  read service
  sqlite3 $DB "DELETE FROM credentials WHERE service='$service';"
  echo "Password for $service deleted successfully!"
}


# Backup the password database
backup_db() {
  cp $DB "${DB}_backup"
  echo "Database backup created successfully!"
}


# Display main menu options
show_menu() {
  echo "Password Manager"
  echo "1) Add a new password"
  echo "2) View a password"
  echo "3) Update a password"
  echo "4) Delete a password"
  echo "5) Backup password database"
  echo "6) Exit"
  echo -n "Choose an option: "
  read option
}


# Main function to run the password manager
main() {
  prompt_master_password
  initialize_db
  
  while true; do
    show_menu
    
    case $option in
      1)
        add_password
        ;;
      2)
        view_password
        ;;
      3)
        update_password
        ;;
      4)
        delete_password
        ;;
      5)
        backup_db
        ;;
      6)
        echo "Exiting Password Manager. Goodbye!"
        exit 0
        ;;
      *)
        echo "Invalid option. Please try again."
        ;;
    esac
  done
}
# Run the main function
main


Step 4:  Make the Script Executable
After saving the file (Ctrl + X, then Y to confirm), make the script executable:
      chmod +x password_manager.sh


Step 5: Run the Password Manager
              ./password_manager.sh


Sample Output:
Enter your master password: **********


Main Menu:
bash
Copy code
Password Manager
1) Add a new password
2) View a password
3) Delete a password
4) Exit
Choose an option: 1


Add Password:
bash
Copy code
Enter the service name (e.g., Google, Facebook): Google
Enter your username/email: user@example.com
Enter your password: **********
Password added successfully!


View Password:
bash
Copy code
Enter the service name to retrieve the password: Google
Password for Google: **********